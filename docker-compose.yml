version: '3.8'

services:
  db:
    image: postgres:13
    restart: always
    env_file:
      - .env.prod.db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U game_ctrl_user -d game_ctrl_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  web:
    build: .
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env.prod
    environment:
      - DJANGO_SETTINGS_MODULE=game_ctrl.settings.production
    command: >
      sh -c "
        rm -rf /var/www/static/* &&
        python manage.py collectstatic --noinput --clear &&
        python manage.py migrate &&
        gunicorn game_ctrl.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    volumes:
      - .:/app
      - static_volume:/var/www/static
      - media_volume:/var/www/media
      - log_volume:/var/log/django
    expose:
      - 8000

  nginx:
    image: nginx:alpine
    restart: always
    volumes:
      - ./nginx:/etc/nginx/conf.d:ro
      - static_volume:/var/www/static:ro
      - media_volume:/var/www/media:ro
      - ./nginx/logs:/var/log/nginx
    ports:
      - "8080:80"
    depends_on:
      web:
        condition: service_started

volumes:
  postgres_data:
  static_volume:
  media_volume:
  log_volume:

